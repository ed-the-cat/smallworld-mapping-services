{"swagger":"2.0","info":{"title":"Connectivity Service","description":"Connectivity Service","version":"0.0.1"},"schemes":["https"],"produces":["application/json"],"securityDefinitions":{"oauth":{"type":"oauth2","authorizationUrl":"https://your-trusted-issuer.example.com","flow":"implicit","scopes":{}}},"paths":{"/v1/versions":{"get":{"summary":"Gets the set of versions available in the database","description":"Gets the set of versions available in the database.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"}],"produces":["application/json"],"tags":["Versions"],"responses":{"200":{"description":"Get operation was successful, response is a JSON array of all the versions available.\n","schema":{"$ref":"#/definitions/VersionResponse"}},"400":{"description":"Bad request.\n"},"500":{"description":"Unexpected error."}}}},"/v1/versions/{versionSelector}/resources/{resourceType}/{resourceId}":{"get":{"summary":"Gets a single resource","description":"Gets the resource from the specified resource type and version.\n","security":[{"oauth":[]}],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/versionSelector"},{"$ref":"#/parameters/resourceType"},{"$ref":"#/parameters/resourceId"},{"$ref":"#/parameters/includeSpatial"}],"tags":["Connectivity Queries"],"responses":{"200":{"description":"Get operation was successful, response is a JSON object of the resources that match the type and ID given.\n","schema":{"$ref":"#/definitions/ResourceIdResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly.\n"},"404":{"description":"The version, resource type or resource ID specified was not found."},"500":{"description":"Unexpected error."}}}},"/v1/versions/{versionSelector}/resources/{resourceType}/{resourceId}/query/trace":{"post":{"summary":"Post request to run a query","description":"Post a request to query a set of resources using the specified resource ID as the start node for any appropriate query.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/versionSelector"},{"$ref":"#/parameters/resourceType"},{"$ref":"#/parameters/resourceId"},{"$ref":"#/parameters/limitType"},{"$ref":"#/parameters/offsetType"},{"name":"body","in":"body","description":"Contains other parameters, some of which are required for the query to execute.\n","required":true,"schema":{"$ref":"#/definitions/TraceQueryRequest"}}],"produces":["application/json"],"consumes":["application/json"],"tags":["Connectivity Queries"],"responses":{"200":{"description":"Post operation was successful, response is a JSON array or a JSON object containing the hierarchy\nof the query results.\n","schema":{"$ref":"#/definitions/TraceQueryResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly."},"404":{"description":"Resource not found."},"500":{"description":"Unexpected error."}}}},"/v1/versions/{targetVersion}":{"delete":{"summary":"Deletes the specified version and all data within it","description":"Deletes the specified version and all data within that version.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"}],"tags":["Versions"],"responses":{"204":{"description":"Delete operation was successful. The version and its data have been deleted.\n"},"400":{"description":"Bad request, one of the parameters was entered incorrectly."},"404":{"description":"The version specified was not found."},"500":{"description":"Unexpected error."}}}},"/v1/uploads/tickets":{"get":{"summary":"Gets tickets that have a status","description":"Gets tickets that have a status. The returned tickets can be filtered by one or more statuses.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/statusFilter"}],"produces":["application/json"],"tags":["Data Ingestion"],"responses":{"200":{"description":"Get operation was successful, response is an array of objects containing details of tickets.\n","schema":{"$ref":"#/definitions/TicketsResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly.\n"},"500":{"description":"Unexpected error."}}}},"/v1/uploads/tickets/{ticketNumber}":{"get":{"summary":"Gets ticket status and any upload processing information","description":"Gets the status and any upload processing information for a specified ticket.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/ticketNumber"}],"produces":["application/json"],"tags":["Data Ingestion"],"responses":{"200":{"description":"Get operation was successful, response is the status of the specified ticket with any upload\nprocessing information.\n","schema":{"$ref":"#/definitions/StatusResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly.\n"},"404":{"description":"Ticket number did not exist.\n"},"500":{"description":"Unexpected error."}}},"delete":{"summary":"Deletes the specified ticket","description":"Deletes the specified ticket and its staged data.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/ticketNumber"}],"produces":["application/json"],"tags":["Data Ingestion"],"responses":{"200":{"description":"Delete operation was successful. Ticket deleted.\n","schema":{"$ref":"#/definitions/DeleteTicketResponse"}},"403":{"description":"Ticket number had a status that doesn't allow deletion.\n"},"404":{"description":"Ticket number did not exist.\n"},"500":{"description":"Unexpected error."}}}},"/v1/uploads/tickets/{ticketNumber}/retry":{"post":{"summary":"Post request to retry ingestion for a ticket","description":"Post request to retry ingestion of the data associated with the given ticket.\nThis can only be called for tickets with a status of \"consume-error\" or \"queue-error\".\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/ticketNumber"},{"name":"body","in":"body","description":"An empty JSON object. Required for compatibility with future updates, which may use this object.\n","required":true,"schema":{"$ref":"#/definitions/RetryRequest"}}],"consumes":["application/json"],"tags":["Data Ingestion"],"responses":{"204":{"description":"Retry operation was successful. Ticket has been successfully requeued for ingestion.\n"},"403":{"description":"Ticket is not allowed to be requeued.\n"},"404":{"description":"Ticket does not exist.\n"},"500":{"description":"Unexpected error."}}}},"/v1/uploads/schema":{"get":{"summary":"Returns validation schema used for uploads","description":"Gets the JSON schema against which CMS uploads are validated.","produces":["application/json"],"tags":["Data Ingestion"],"responses":{"200":{"description":"Get operation was successful, response is the validation schema in JSON format.\n","schema":{"$ref":"#/definitions/SchemaResponse"}},"500":{"description":"Unexpected error."}}}},"/v1/versions/{targetVersion}/subnetworks":{"get":{"summary":"Gets the set of subnetworks available in the specified version","description":"Returns the set of subnetworks available in the specified version.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"}],"produces":["application/json"],"tags":["Data Ingestion"],"responses":{"200":{"description":"Get operation was successful, response is a JSON array of all the subnetworks that are available.\n","schema":{"$ref":"#/definitions/SubnetworksResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly."},"404":{"description":"The version does not exist."},"500":{"description":"Unexpected error."}}}},"/v1/versions/{targetVersion}/subnetworks/{targetSubnetwork}":{"post":{"summary":"Posts a subnetwork file to the ingestion service","description":"Asynchronously posts a subnetwork file to the ingestion service for the version specified.\n<br>The file contents can be provided as the body of the request or as a URL that is used to retrieve the file via a HTTP GET request.\n<br>The file can be either a CIM (XML) file, a CMS-JSON file or a zip file (containing CIM XML and GML).\n<br>Any existing equipment in the specified version and subnetwork that is not shared with any other subnetwork is deleted prior to ingestion.\n<br>If the optional validateConnectivity parameter is set to “true” or not set, the service checks for a valid feeder before ingesting the subnetwork. This check validates that the single subnetwork in the file contains zero or one feeder IDs as follows&#58;\n* If the subnetwork contains one feeder and that feeder has a terminal in the specified subnetwork,\nthe feeder is inserted into the subnetwork.\n* If the subnetwork contains more than one feeder or contains one feeder with a terminal that does not\nexist in the specified subnetwork, the request is invalid and the feeder IDs are added to the ticket information.\n* If the subnetwork contains no feeders or one feeder has zero terminals in the specified subnetwork,\nthe insertion process checks for closed breakers, which are breakers with a normal state of 'closed'&#58;\n-- If the check returns one breaker that has one terminal that is connected to another object\nin the subnetwork, the request is processed. If the terminal has an associated feeder, that feeder ID is\nadded to the ticket information. Otherwise, a feeder object referring to that terminal is created and this\nfeeder ID is added to the ticket information.\n-- If the check returns no breakers or one breaker with no terminals connected to other objects in the subnetwork, the request is\ninvalid and the breaker ID is added to the ticket information.\n-- If there are multiple closed breakers, the breakers are checked to see if any are boundary features, that is, the breaker is closed and it is only connected to the circuit by one terminal.\nIf a single breaker is a boundary feature, the request is processed and  the breaker is marked as the logical source of the circuit. If multiple breakers are boundary features, the request is invalid and the breaker IDs are added to the ticket information.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/validateConnectivity"},{"$ref":"#/parameters/maxRetries"},{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"},{"$ref":"#/parameters/targetSubnetwork"},{"$ref":"#/parameters/webhookUrl"},{"$ref":"#/parameters/cleanups"},{"name":"body","in":"body","description":"File to post to the server or a URL that references the file.\n","required":true,"schema":{"$ref":"#/definitions/ResourceUploadRequest"}}],"produces":["application/json"],"consumes":["application/octet-stream","application/xml","application/vnd.ge-cms+json","application/vnd.ge-cmsref+json"],"tags":["Data Ingestion"],"responses":{"201":{"description":"Post operation successfully posted data for ingestion.\nResponse is a ticket ID that can be used to monitor the progress of the ingestion.\n","schema":{"$ref":"#/definitions/ResourceUploadResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly."},"500":{"description":"Unexpected error."}}},"get":{"summary":"Gets equipment and nodes associated with a subnetwork","description":"Returns equipment and nodes that are associated with the specified subnetwork.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"},{"$ref":"#/parameters/targetSubnetwork"}],"produces":["application/json"],"tags":["Data Ingestion"],"responses":{"200":{"description":"Get operation was successful, response is a JSON object containing equipment associated with the subnetwork.\n","schema":{"$ref":"#/definitions/SubnetworkResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly."},"404":{"description":"The version or the subnetwork does not exist."},"500":{"description":"Unexpected error."}}},"delete":{"summary":"Deletes the specified subnetwork","description":"Deletes the specified subnetwork and all equipment and nodes associated with it.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"},{"$ref":"#/parameters/targetSubnetwork"}],"tags":["Data Ingestion"],"responses":{"204":{"description":"Delete operation was successful, the subnetwork and all associated equipment and nodes have been deleted.\n"},"400":{"description":"Bad request, one of the parameters was entered incorrectly."},"404":{"description":"The version or the subnetwork does not exist."},"500":{"description":"Unexpected error."}}}},"/v1/versions/{targetVersion}/subnetworks/{targetSubnetwork}/feeder":{"get":{"summary":"Gets the feeder for the given subnetwork","description":"Returns the feeder record for the specified subnetwork.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"},{"$ref":"#/parameters/targetSubnetwork"},{"$ref":"#/parameters/includeSpatial"}],"produces":["application/json"],"tags":["Connectivity Queries"],"responses":{"200":{"description":"Get operation was successful, response is a JSON object for the Feeder for the given resource\n or an empty response if no Feeder is found.\n","schema":{"$ref":"#/definitions/SubnetworkFeederResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly.\n"},"404":{"description":"The version, subnetwork or feeder does not exist."},"500":{"description":"Unexpected error."}}}},"/v1/versions/{targetVersion}/maps/v1/collections":{"get":{"summary":"Gets list of all collections","description":"Gets names of all the collections for a given tenant and target version.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"}],"produces":["application/json"],"tags":["Spatial Queries"],"responses":{"200":{"description":"Get operation was successful. Response is a JSON array containing all of the collection names.","schema":{"$ref":"#/definitions/CollectionsResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly."},"404":{"description":"Named version not found.\n"},"500":{"description":"Unexpected error."}}}},"/v1/versions/{targetVersion}/maps/v1/collections/{collectionName}":{"get":{"summary":"Gets all data for a collection","description":"Gets the full GeoJSON FeatureCollection uploaded for this collection.\nAll GeoJSON Features will be as originally uploaded with the addition of a featureId attribute that uniquely identifies the feature across all your collections.\n","security":[{"oauth":[]}],"produces":["application/json"],"tags":["Spatial Queries"],"responses":{"200":{"description":"Get operation was successful. Response is a collection of features.","schema":{"$ref":"#/definitions/FeatureCollectionResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly."},"404":{"description":"Collection could not be found."},"500":{"description":"Unexpected error."}},"parameters":[{"$ref":"#/parameters/collectionName"},{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"}]}},"/v1/versions/{targetVersion}/maps/v1/collections/{collectionName}/spatial-query":{"post":{"summary":"Queries a collection to return all points located by the specified operator","description":"Queries a collection to return all points located by the specified operator.\nThe following operators are available:\n\"within\" - find all points within an area, as a GeoJSON FeatureCollection containing all features within the\nprovided polygon.\n\"nearest\" - return the nearest point to the one specified, as GeoJSON FeatureCollection with the longitude and\nlatitude of the nearest point.\n\"lineIntersectsLine\" - find all points of intersection between two linestrings, as a GeoJSON FeatureCollection\ncontaining all points of intersection as GeoJSON features.\n","security":[{"oauth":[]}],"consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/collectionName"},{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"},{"name":"operator","description":"The query type, which can be \"within\", \"nearest\" or \"lineIntersectsLine\".\n","required":true,"type":"string","enum":["within","nearest","lineIntersectsLine"],"in":"query"},{"name":"body","in":"body","description":"For operator of \"within\" must be a GeoJSON object containing a polygon.\nFor operator of \"nearest\" must be a GeoJSON object containing the longitude and latitude of the point of interest.\nFor operator of \"lineIntersectsLine\" must be a GeoJSON object containing an array of two string IDs for GeoJSON linestrings.\n","required":true,"schema":{"$ref":"#/definitions/SpatialQueryRequest"}}],"tags":["Spatial Queries"],"responses":{"200":{"description":"Post operation was successful. Response is a GeoJSON object containing the query results.","schema":{"$ref":"#/definitions/FeatureCollectionResponse"}},"400":{"description":"The request headers are incorrect or the request body is not in the correct format for the\nspecified operator.\n"},"404":{"description":"Named collection not found.\n"},"500":{"description":"Unexpected error."}}}},"/v1/versions/{targetVersion}/maps/v1/collections/{collectionName}/spatial-query/bbox-interacts":{"get":{"deprecated":true,"summary":"Returns a collection of features within the specified bounding box","description":"Deprecated - use POST method instead.\nReturns all features in the specified collection that exist fully or\npartially within the specified bounding box. The bounding box is defined\nby two coordinates in the EPSG:4326 (WGS84) (for further details see\nhttp://epsg.io/4326):\n* left (longitude), bottom (latitude)\n* right (longitude), top (latitude)\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/collectionName"},{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"},{"name":"left","in":"query","description":"Left longitude coordinate of bounding box.","required":true,"type":"number"},{"name":"right","in":"query","description":"Right longitude coordinate of bounding box.","required":true,"type":"number"},{"name":"top","in":"query","description":"Top latitude coordinate of bounding box.","required":true,"type":"number"},{"name":"bottom","in":"query","description":"Bottom latitude coordinate of bounding box.","required":true,"type":"number"}],"tags":["Spatial Queries"],"responses":{"200":{"description":"A GeoJSON feature collection is returned.","schema":{"$ref":"#/definitions/FeatureCollectionResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly."},"404":{"description":"Collection does not exist."},"500":{"description":"Unexpected error."}}},"post":{"summary":"Returns a collection of features within the specified bounding box","description":"Returns all features in the specified collection that exist fully or\npartially within the specified bounding box. The bounding box is defined\nby two coordinates in the EPSG:4326 (WGS84) (for further details see\nhttp://epsg.io/4326):\n* left (longitude), bottom (latitude)\n* right (longitude), top (latitude)\nAttributes can also be supplied in the request. Only features that match\nthese attributes are returned.\n","security":[{"oauth":[]}],"consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/collectionName"},{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"},{"name":"body","in":"body","description":"Object defining the bounding box with left, right, top and bottom and\noptional attributes.\n","required":true,"schema":{"$ref":"#/definitions/BBoxQueryRequest"}}],"tags":["Spatial Queries"],"responses":{"200":{"description":"A GeoJSON feature collection is returned.","schema":{"$ref":"#/definitions/FeatureCollectionResponse"}},"400":{"description":"Bad request. Required bounding box parameters were missing or not valid.\n"},"404":{"description":"Collection does not exist."},"500":{"description":"Unexpected error."}}}},"/v1/versions/{targetVersion}/maps/v1/collections/{collectionName}/features":{"get":{"summary":"Gets features","description":"Gets GeoJSON of type FeatureCollection containing all GeoJSON features from the named collection with a matching GeoJSON id.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/collectionName"},{"$ref":"#/parameters/featureId"},{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/targetVersion"}],"tags":["Spatial Queries"],"responses":{"200":{"description":"Get operation was successful. GeoJSON FeatureCollection containing 0, 1 or more GeoJSON features is returned.","schema":{"$ref":"#/definitions/FeatureCollectionResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly."},"404":{"description":"Collection does not exist."},"500":{"description":"Unexpected error."}}}},"/v1/versions/{targetVersion}/maps/v1/collections/{collectionName}/collectionSize":{"get":{"summary":"Gets the size of a collection","description":"Gets the size of the specified collection.\n","security":[{"oauth":[]}],"parameters":[{"$ref":"#/parameters/tenantId"},{"$ref":"#/parameters/collectionName"},{"$ref":"#/parameters/targetVersion"}],"tags":["Spatial Queries"],"produces":["application/json"],"responses":{"200":{"description":"Get operation was successful. Response is the size of given collection.","schema":{"$ref":"#/definitions/CollectionSizeResponse"}},"400":{"description":"Bad request, one of the parameters was entered incorrectly."},"404":{"description":"Specified collection was not found."},"500":{"description":"Unexpected error"}}}}},"parameters":{"tenantId":{"name":"predix-zone-id","description":"The tenant identifier.  For Predix, this is the instanceId value specified in the VCAP-SERVICES environment variable.","in":"header","pattern":"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$","required":true,"type":"string","format":"uuid"},"webhookUrl":{"name":"webhookUrl","in":"query","description":"The endpoint for POSTing status updates.","required":false,"type":"string","format":"uri"},"resourceId":{"name":"resourceId","in":"path","description":"Resource identifier.","required":true,"type":"string","pattern":"^[A-Za-z0-9_\\-\\.]+$"},"resourceType":{"name":"resourceType","in":"path","description":"Resource type identifier. Can be \"IdentifiedObject\" to find any object type.","required":true,"type":"string","pattern":"^[A-Za-z0-9.]+$"},"versionSelector":{"name":"versionSelector","in":"path","description":"Version identifier.","required":true,"type":"string","maxLength":50,"pattern":"^[A-Za-z0-9_\\-\\:]+$"},"targetVersion":{"name":"targetVersion","in":"path","description":"Version identifier.","required":true,"type":"string","maxLength":50,"pattern":"^[A-Za-z0-9_\\-\\:]+$"},"targetSubnetwork":{"name":"targetSubnetwork","in":"path","description":"Subnetwork identifier.","required":true,"type":"string","maxLength":50,"pattern":"^[A-Za-z0-9_*\\-\\:]+$"},"limitType":{"name":"limit","in":"query","description":"Maximum number of records to return.","type":"integer","minimum":1},"offsetType":{"name":"offset","description":"Number of records to skip before returning.","in":"query","type":"integer","minimum":0},"includeSpatial":{"name":"includeSpatial","in":"query","description":"A value of \"true\" specifies that the query should return spatial data with the query response.","required":false,"type":"boolean"},"ticketNumber":{"name":"ticketNumber","description":"Ticket identifier.","in":"path","type":"string","required":true},"statusFilter":{"name":"statusFilter","description":"A comma separated list of ticket statuses.\nIn 'try it out' you can select all the required items from the drop-down list\n(for multiple selections, use Cmd-click on Macintosh and Ctrl-click on Windows).\n","type":"array","items":{"type":"string","enum":["metadata-error","blobdata-error","created","queue-error","published","consumed","consume-error"]},"in":"query","required":false},"maxRetries":{"name":"maxRetries","description":"Maximum number of times to retry ingestion if an error occurs.\n","in":"query","required":false,"type":"integer","minimum":0},"validateConnectivity":{"name":"validateConnectivity","description":"A value of \"true\" specifies that the connectivity of a subnetwork should be validated.\n","in":"query","type":"boolean","default":true},"cleanups":{"name":"cleanups","description":"A comma separated list of the names of cleanups to be applied to data before validation.\nCurrent cleanups can only be defined on tickets containing data in CMS JSON format (that is, not CIM in XML format).\nThe following types of cleanup can appear in the list:\n\n\nterminals\n\nThis creates missing terminals with dummy terminal and node names:\n* For transformers: If no terminals are present, one terminal is created.  If more than two are present, all terminals after the second are removed.\n* FaultIndicators are ignored.  This is because the terminal must reference a node attached to another piece of equipment in order for the internal model to build correctly.\n\nsplit-segments\n\nThis splits linear objects that have more than two terminals into a sequence of segments that have just two terminals. If this type of cleanup is used,\nall terminals in the supplied data must have a sequenceNumber defined (used to create the split geometries). New objects have:\n* An automatically generated id, which is the id of the original source object, with -cms-segment-0, -cms-segment-1, etc appended.\n* A sourceId attribute added, which is the id of the original source object.\n\nmissing-phases\n\nThis sets the phases key on all terminals where that key is either missing or is an empty string:\n* If the phases key is missing on a terminal it is added with a value of ABC.\n* If the phases key is empty on a terminal it is given a value of ABC.\n","in":"query","type":"string","pattern":"^([-_0-9A-Za-z]+,)*([-_0-9A-Za-z]+)$"},"collectionName":{"name":"collectionName","description":"Name of asset collection.","in":"path","required":true,"type":"string"},"featureId":{"name":"id","in":"query","description":"Feature identifier.","required":true,"type":"string","minLength":1}},"definitions":{"TraceQueryRequest":{"type":"object","properties":{"phase":{"type":"string","pattern":"^(?=[A-C]{1,3}$)(?!.*(.).*\\1).*$","description":"The phases to trace along. Can contain one or zero instances of \"A\", \"B\" and \"C\", in any order.\n"},"direction":{"type":"string","description":"Defines the direction of the trace. Can be one of \"downstream\", \"upstream\",\n\"circuit\" (returns the whole circuit containing the resource) or\n\"fedBy\" (returns all objects fed by the specified transformer resource).\n","enum":["downstream","upstream","circuit","fedBy"]},"return":{"type":"object","description":"Used to filter the trace results.\n","properties":{"types":{"type":"array","description":"When present, only equipment with a matching type are returned.\n","items":{"type":"string","description":"Equipment type.\n"}},"hierarchy":{"type":"boolean","description":"If set to true, results are returned in a hierarchical structure. Each phase of the hierarchical results has the same structure.\nFor example, {id: \"123\", type: \"PowerTransformer\", down: []} (where 'down' contains downstream nested objects).\n"},"attributes":{"type":"array","description":"When present, any attributes with these names will appear in the trace results for each returned object","items":{"type":"string","description":"The name of the an attribute to return"}}}}},"required":["phase"]},"VersionResponse":{"type":"object","description":"JSON array of the versions in the system.\n","properties":{"results":{"type":"array","description":"Contains an array of versions in the system. Normal and operational selectors are reserved.","items":{"type":"object","properties":{"network":{"type":"string","description":"Network name."}}}}}},"StatusResponse":{"type":"object","description":"JSON object containing the status and any upload information for a ticket.\n","properties":{"ticket":{"type":"string","description":"The ticket number."},"status":{"type":"string","description":"The upload status of the ticket."},"network":{"type":"string","description":"Network the ticket is being processed for."},"subnetwork":{"type":"string","description":"Subnetwork the ticket is being processed for."},"validated":{"type":"boolean","description":"Whether the ticket passed validation."},"info":{"type":"array","description":"Details of any upload information for a ticket.","items":{"type":"string"}},"validationError":{"type":"object","description":"Validation error object. Included if validated is false."},"counts":{"type":"object","description":"Success ingestion counts. Included if status is consumed."},"dateCreated":{"type":"string","format":"date-time","description":"date time for when the ticket was created."}}},"DeleteTicketResponse":{"type":"object","properties":{"ticket":{"type":"string"}}},"TicketsResponse":{"type":"object"},"SubnetworksResponse":{"type":"object","description":"JSON array of the subnetworks in the specified version.\n","properties":{"version":{"type":"string","description":"Version identifier."},"subnetworks":{"type":"array","description":"Contains a list of subnetwork identifiers.","items":{"type":"string"}}}},"SubnetworkResponse":{"type":"object","description":"JSON object containing two lists, one of equipment and one of nodes.\n","properties":{"version":{"type":"string","description":"Version identifier."},"subnetwork":{"type":"string","description":"Subnetwork identifier."},"equipment":{"type":"array","description":"Equipment belonging to the subnetwork","items":{"type":"object"}},"nodes":{"type":"array","items":{"type":"string"},"description":"Nodes belonging to the subnetwork."}}},"ResourceUploadRequest":{"description":"Contains either the file for upload in an appropriate format given the content-type or a URL that references the file.\n<br>If the content-type is application/vnd.ge-cmsref+json then the body must contain the following two parameters\n<br>target_url ... a URL that references the file.\n<br>target_content_type ... a mime type that must match the file type to be ingested. Valid values are application/octet-stream, application/xml and application/vnd.ge-cms+json\n"},"ResourceUploadResponse":{"type":"object","description":"JSON object containing a ticket reference for an upload request.\n","properties":{"ticket":{"type":"string","description":"The ticket number the service has assigned to your upload."}}},"RetryRequest":{"type":"object","description":"Additional parameters to be passed to the retry request. Currently this should be left blank.\n"},"TraceQueryResponse":{"type":"object","description":"JSON object containing a list or hierarchy of trace results.\n","properties":{"results":{"description":"A JSON array of results.\nFor example, [{id: \"123\", type: \"PowerTransformer\"}]\nOr\nA JSON object containing a hierarchical structure. Each phase of the hierarchical results has the same structure.\nFor example, {byTracedPhase {A: {id: \"123\", type: \"PowerTransformer\", down: []}}} (where 'down' contains downstream nested objects).\n"},"error":{"type":"string","description":"Information about any errors whilst performing the trace query.\n"}}},"ResourceIdResponse":{"type":"object","description":"JSON object of the specific resource being requested.\n","properties":{"resourceID":{"type":"object","description":"Attributes that belong to the resource queried.","properties":{"subnetworks":{"type":"array","description":"Array containing one or more subnetworks to which the resource belongs.\n","items":{"type":"string","description":"subnetwork name."}},"connectivity":{"description":"Connectivity data of the resource being queried. Always present.","type":"object","properties":{"id":{"type":"string"},"type":{"type":"string"},"attributes":{"type":"object","properties":{"propertyName":{"type":"array","items":{"type":"string"}},"assets":{"type":"array","items":{"type":"object"},"description":"Resource attributes related to the resource being queried."}}}}},"spatial":{"type":"object","description":"Describes the spatial data of the resource queried. Present if includeSpatial parameter is set to true.","properties":{"type":{"type":"string"},"features":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"},"properties":{"type":"object"},"geometry":{"type":"object","properties":{"type":{"type":"string"},"coordinates":{"type":"array","items":{"type":"number","format":"float"}}}}}}}}}}}}},"SubnetworkFeederResponse":{"$ref":"#/definitions/ResourceIdResponse"},"SchemaResponse":{"type":"object","description":"The upload validation schema in JSON format.\n"},"FeatureCollectionResponse":{"type":"object","properties":{"type":{"type":"string"},"features":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"},"properties":{"type":"object"},"geometry":{"type":"object","properties":{"type":{"type":"string"},"coordinates":{"type":"array","items":{"type":"number","format":"float"}}}}}}}},"description":"Standard GeoJSON FeatureCollection with each Feature tagged with a\nfeatureId.\n"},"CollectionsResponse":{"description":"An array of collection names.","type":"object","properties":{"collections":{"type":"array","items":{"type":"string"}}}},"SpatialQueryRequest":{"type":"object","description":"GeoJSON geometry or an object with longitude/latitude. All coordinates in EPSG:4326 (WGS84).\n","properties":{"longitude":{"type":"number"},"latitude":{"type":"number"}}},"CollectionSizeResponse":{"type":"object","properties":{"collection_size":{"type":"number","description":"The size of the specified collection."}}},"BBoxQueryRequest":{"type":"object","description":"All coordinates in EPSG:4326 (WGS84).\n","properties":{"left":{"description":"The longitude value of the left coordinate of the bounding box.\n","type":"number","maximum":180,"minimum":-180},"right":{"description":"The longitude value of the right coordinate of the bounding box.\n","type":"number","maximum":180,"minimum":-180},"top":{"description":"The latitude value of the top coordinate of the bounding box.\n","type":"number","maximum":90,"minimum":-90},"bottom":{"description":"The latitude value of the bottom coordinate of the bounding box.\n","type":"number","maximum":90,"minimum":-90},"attributes":{"type":"object","description":"Property name and value pairs to filter the GeoJSON collection.\nOnly features with matching attributes will be included in the response.\n"}}}}}
